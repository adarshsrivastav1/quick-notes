{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","onFormSubmit","alert","handleSubmit","this","onSubmit","htmlFor","type","id","onChange","Component","App","characters","JSON","parse","localStorage","getItem","filter","character","i","newstate","setItem","stringify","removeAll","removeItem","className","ReactDOM","render","document","getElementById"],"mappings":"0OAEMA,EAAc,WAChB,OACI,gCACI,+BACI,wCACA,uCACA,6CACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKA,EAAM,IACX,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BAAI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MASjB,OAAO,gCAAQJ,KAaJS,EAVD,SAACV,GAAW,IACdE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBACnB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCe3DE,E,4MA9CXC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAETM,MAAQ,EAAKD,a,EACbE,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBV,EADY,EACZA,KAAMW,EADM,EACNA,MACd,EAAKC,SAAL,eACKZ,EAAQW,K,EAIjBE,aAAe,SAACJ,GACW,KAAlB,EAAKF,MAAMP,MAAgC,KAAjB,EAAKO,MAAMN,IACtCa,MAAM,2BAGN,EAAKpB,MAAMqB,aAAa,EAAKR,OAC7B,EAAKK,SAAS,EAAKN,gB,4CAI3B,WAAU,IAAD,EACiBU,KAAKT,MAAnBP,EADH,EACGA,KAAMC,EADT,EACSA,IACd,OACI,uBAAMgB,SAAUD,KAAKH,aAArB,UACI,uBAAOK,QAAQ,OAAf,mBACA,uBACIC,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHT,MAAOX,EACPqB,SAAUL,KAAKR,eACnB,uBAAOU,QAAQ,MAAf,yBACA,uBACIC,KAAK,OACLnB,KAAK,MACLoB,GAAG,MACHT,MAAOV,EACPoB,SAAUL,KAAKR,eACnB,uBAAOW,KAAK,SAASR,MAAM,MAAMT,QAASc,KAAKH,sB,GAzC5CS,aCkDJC,E,4MAhDXhB,MAAQ,CACJiB,WAAaC,KAAKC,MAAMC,aAAaC,QAAQ,QAAYH,KAAKC,MAAMC,aAAaC,QAAQ,QAAQJ,WAAc,I,EAEnHrB,gBAAkB,SAAAJ,GAAU,IAChByB,EAAe,EAAKjB,MAApBiB,WAER,EAAKZ,SAAS,CACVY,WAAYA,EAAWK,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMhC,Q,EAIzBgB,aAAe,SAAAe,GACX,IAAIE,EAAW,CAAER,WAAW,GAAD,mBAAM,EAAKjB,MAAMiB,YAAjB,CAA6BM,KACxD,EAAKlB,SAASoB,GACdL,aAAaM,QAAQ,MAAMR,KAAKS,UAAUF,K,EAG9CG,UAAU,WAINR,aAAaS,WAAW,OACxB,EAAKxB,SAJM,CACPY,WAAW,M,4CAMnB,WAAU,IACEA,EAAeR,KAAKT,MAApBiB,WACR,OACI,sBAAKa,UAAU,YAAf,UACI,6CACA,6FACA,cAAC,EAAD,CACIzC,cAAe4B,EACfrB,gBAAiBa,KAAKb,kBAE1B,uBACAgB,KAAK,SACLR,MAAM,aACNT,QAASc,KAAKmB,YAEd,yCACA,cAAC,EAAD,CAAMpB,aAAcC,KAAKD,sB,GA3CvBO,a,MCClBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.574bbde5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = () => { \r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Sr.No.</th>\r\n                <th>Title</th>\r\n                <th>Description</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nconst TableBody = (props) => { \r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{index+1}</td>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return <tbody>{rows}</tbody>;\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter } = props;\r\n        return (\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n            </table>\r\n        );\r\n}\r\n\r\nexport default Table;","import React, {Component} from 'react';\r\n\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: ''\r\n    };\r\n    state = this.initialState;\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        if ((this.state.name==='') && (this.state.job==='')){\r\n            alert(\"Don't add Empty fields\");\r\n        }\r\n        else{\r\n            this.props.handleSubmit(this.state);\r\n            this.setState(this.initialState);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state; \r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <label htmlFor=\"name\">Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"job\">Description</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"job\" \r\n                    id=\"job\"\r\n                    value={job} \r\n                    onChange={this.handleChange} />\r\n                <input type=\"button\" value='Add' onClick={this.onFormSubmit} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: (JSON.parse(localStorage.getItem('key'))) ? (JSON.parse(localStorage.getItem('key')).characters) : []\n    };\n    removeCharacter = index => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            })\n        });\n    }\n    handleSubmit = character => {\n        let newstate = { characters: [...this.state.characters, character] };\n        this.setState(newstate);\n        localStorage.setItem('key',JSON.stringify(newstate))\n    }\n\n    removeAll=()=>{\n        let data = {\n            characters:[]\n        }\n        localStorage.removeItem('key')\n        this.setState(data)\n    }\n\n    render() {\n        const { characters } = this.state;\n        return (\n            <div className=\"container\">\n                <h1>quick-notes</h1>\n                <p>Add a character with a Title and a Description to the table.</p>\n                <Table\n                    characterData={characters}\n                    removeCharacter={this.removeCharacter}\n                />\n                <input\n                type='button'\n                value='Remove All'\n                onClick={this.removeAll}\n                />\n                <h3>Add New</h3>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}